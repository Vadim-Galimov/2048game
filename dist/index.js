/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_App_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/App.js */ \"./src/modules/App.js\");\n\nconst app = new _modules_App_js__WEBPACK_IMPORTED_MODULE_0__.App();\n_modules_App_js__WEBPACK_IMPORTED_MODULE_0__.App.run();\n\n//# sourceURL=webpack://2048game/./src/index.js?");

/***/ }),

/***/ "./src/modules/App.js":
/*!****************************!*\
  !*** ./src/modules/App.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   App: () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _Controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Controller.js */ \"./src/modules/Controller.js\");\n/* harmony import */ var _Drawer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Drawer.js */ \"./src/modules/Drawer.js\");\n/* harmony import */ var _Field_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Field.js */ \"./src/modules/Field.js\");\n\nconst controller = new _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller();\n\nconst drawer = new _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer();\n\nconst field = new _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field();\nclass App {\n  static run() {\n    App.#setupController();\n    App.startNewGame();\n  }\n  static startNewGame() {\n    _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.resetData();\n    _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.make2ActiveCells();\n    App.#mathCellResize();\n    _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawScore(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.score);\n    _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.runBodyDrawer(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime * 2, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray);\n  }\n  async #makeTurn() {\n    await App.turn.runPhaseOne();\n    await App.turn.runPhaseTwo();\n    await App.turn.runPostTurnPhase();\n  }\n  static turn = {\n    async runPhaseOne() {\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.runBodyDrawer(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime * 2, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray);\n      App.turn.setTickets();\n      App.turn.allMove();\n      await App.turn.delay();\n    },\n    async runPhaseTwo() {\n      App.#mathCellResize();\n      App.turn.changeScore();\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.deleteExcessCells();\n      turn.checkTurnResult();\n      await App.turn.delay();\n    },\n    async runPostTurnPhase() {\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.winStatus == 0 && _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus == 0) _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.turnBlock = 0;\n    },\n    delay() {\n      return new Promise(resolve => setTimeout(resolve, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime));\n    },\n    checkTurnResult() {\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDetected == 1) _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.make1ActiveCell();\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDetected = 0;\n      App.gameStatus.checkWin();\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.winStatus == 1) return 0;\n      App.gameStatus.checkLose();\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus == 1) return 0;\n    },\n    setTickets() {\n      for (let i = 0; i < 4; i++) {\n        setTicketAndMoveSpeed(1, i);\n        setTicketAndMoveSpeed(2, i);\n        setTicketAndMoveSpeed(3, i);\n      }\n      function setTicketAndMoveSpeed(choosenNumber, choosenColumn) {\n        let choosenColumnArr = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.columnArray[_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDirection];\n        let choosenCell = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(choosenColumnArr[choosenColumn][choosenNumber]);\n        if (!choosenCell) return 0;\n        let maxMove = getMaxMove(choosenColumn, choosenCell);\n        let sub1Number = choosenNumber - 1;\n        let sub2Number = choosenNumber - 2;\n        let sub3Number = choosenNumber - 3;\n        let sub1Cell = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(choosenColumnArr[choosenColumn][sub1Number]);\n        let sub2Cell = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(choosenColumnArr[choosenColumn][sub2Number]);\n        let sub3Cell = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(choosenColumnArr[choosenColumn][sub3Number]);\n        let ticket = choosenCell.number;\n        let moveSpeed = 0;\n        if (checkMerge(sub1Cell, choosenCell)) {\n          moveSpeed = 1;\n          ticket = choosenColumnArr[choosenColumn][sub1Number];\n          choosenCell.toDelete = 1;\n          sub1Cell.value *= 2;\n          sub1Cell.statusEndedMerge = 1;\n          sub1Cell.mergeBlock = 1;\n          choosenCell.mergeBlock = 1;\n          _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDetected = 1;\n        }\n        if (!sub1Cell && maxMove > 0) {\n          moveSpeed = 1;\n          ticket = choosenColumnArr[choosenColumn][sub1Number];\n          _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDetected = 1;\n          if (checkMerge(sub2Cell, choosenCell)) {\n            moveSpeed = 2;\n            sub2Cell.value *= 2;\n            sub2Cell.statusEndedMerge = 1;\n            choosenCell.toDelete = 1;\n            ticket = choosenColumnArr[choosenColumn][sub2Number];\n            sub2Cell.mergeBlock = 1;\n            choosenCell.mergeBlock = 1;\n          }\n          if (!sub2Cell && maxMove > 1) {\n            moveSpeed = 2;\n            ticket = choosenColumnArr[choosenColumn][sub2Number];\n            if (checkMerge(sub3Cell, choosenCell)) {\n              moveSpeed = 3;\n              ticket = choosenColumnArr[choosenColumn][sub3Number];\n              sub3Cell.value *= 2;\n              sub3Cell.statusEndedMerge = 1;\n              choosenCell.toDelete = 1;\n              sub3Cell.mergeBlock = 1;\n              choosenCell.mergeBlock = 1;\n            }\n            if (!sub3Cell && maxMove > 2) {\n              moveSpeed = 3;\n              ticket = choosenColumnArr[choosenColumn][sub3Number];\n            }\n          }\n        }\n        choosenCell.ticket = ticket;\n        choosenCell.moveSpeed = moveSpeed;\n        function getMaxMove(choosenColumn, choosenCell) {\n          let choosenColumnArr = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.columnArray[_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDirection];\n          let thisArr = choosenColumnArr[choosenColumn];\n          return thisArr.indexOf(choosenCell.number);\n          ;\n        }\n        function checkMerge(subCell, choosenCell) {\n          if (subCell?.value == choosenCell.value && subCell?.mergeBlock == 0 && choosenCell.mergeBlock == 0) return 1;else return 0;\n        }\n      }\n    },\n    allMove() {\n      let animationCounter = 0;\n      let timerMakeStep = setInterval(() => {\n        if (animationCounter > 4) {\n          clearInterval(timerMakeStep);\n          _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.forEach(function (item) {\n            item.number = item.ticket;\n          });\n        }\n        stepMove();\n        animationCounter++;\n      }, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime / 5);\n      function stepMove() {\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.forEach(function (item) {\n          item.x += _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDeltaXY[_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDirection][0] * item.moveSpeed / (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime / 20);\n          item.y += _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDeltaXY[_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDirection][1] * item.moveSpeed / (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime / 20);\n        });\n      }\n    },\n    changeScore() {\n      let turnScore = 0;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.forEach(function (item) {\n        if (item.toDelete == 1) turnScore += item.valueOfDraw;\n      });\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.score += turnScore * 2;\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawScore(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.score);\n    }\n  };\n  static #mathCellResize() {\n    let i = 0;\n    let createInterval = setInterval(() => {\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.forEach(function (item) {\n        item.animateCreating(5 - i);\n        item.animateMerge(5 - i);\n      });\n      i++;\n      if (i > 4) {\n        clearInterval(createInterval);\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.forEach(function (item) {\n          item.stopAnimating();\n        });\n      }\n    }, 10);\n  }\n  static doMove(direction) {\n    if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.turnBlock == 1) return 0;\n    _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.turnBlock = 1;\n    _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.moveDirection = direction;\n    App.#makeTurn();\n  }\n  static adminComands = {\n    makePrewinSituation() {\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[0].value = 1024;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[1].value = 1024;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[1].valueOfDraw = 1024;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[0].valueOfDraw = 1024;\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawCells(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray);\n    },\n    makePreloseSituation() {\n      App.startNewGame();\n      for (let i = 0; i < 13; i++) {\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.make1ActiveCell();\n      }\n      for (let i = 0; i < 15; i++) {\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[i].value = i + 32;\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray[i].valueOfDraw = i + 32;\n      }\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawCells(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray);\n    }\n  };\n  static #setupController() {\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.checkMouseMove = App.rebind.checkMouseMove.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.buttonClick = App.rebind.buttonClick.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.touchButtonClick = App.rebind.touchButtonClick.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.pressEnter = App.rebind.pressEnter.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.openAdminPanel = App.rebind.openAdminPanel.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.triggerButton = App.rebind.triggerButton.bind(this);\n    _Controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller.init();\n  }\n  static gameStatus = {\n    checkWin() {\n      let valueArray = _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.map(function (item) {\n        return item.value;\n      });\n      if (valueArray.includes(2048)) _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.winStatus = 1;\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.winStatus == 1) setTimeout(App.gameStatus.makeWin, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime);\n      ;\n    },\n    checkLose() {\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus = 1;\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.cellArray.length < 16) {\n        _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus = 0;\n        return 0;\n      }\n      for (let i1 = 0; i1 < 4; i1++) {\n        for (let i = 0; i < 3; i++) {\n          if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.downColumnArr[i1][i])?.value == _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.downColumnArr[i1][i + 1])?.value) _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus = 0;\n        }\n      }\n      for (i1 = 0; i1 < 4; i1++) {\n        for (i = 0; i < 3; i++) {\n          if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.rightColumnArr[i1][i])?.value == _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.getCellFromNumber(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.rightColumnArr[i1][i + 1])?.value) _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus = 0;\n        }\n      }\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.loseStatus == 1) setTimeout(App.gameStatus.makeLose, _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.phaseTime);\n    },\n    makeLose() {\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawLose();\n      buttonXY = _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawButton(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain);\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonXY = buttonXY;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.visible = 1;\n    },\n    makeWin() {\n      _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawWin();\n      let buttonXY = _Drawer_js__WEBPACK_IMPORTED_MODULE_1__.Drawer.drawButton(_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain);\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonXY = buttonXY;\n      _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.visible = 1;\n    }\n  };\n  static rebind = {\n    checkMouseMove(cursorX, cursorY) {\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.visible == 1) {\n        let elem = document.getElementById('canvasBody');\n        if (cursorX > _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonX1 + elem.offsetLeft && cursorX < _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonX2 + elem.offsetLeft && cursorY > _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonY1 + elem.offsetTop && cursorY < _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonY2 + elem.offsetTop) {\n          document.body.style.cursor = \"pointer\";\n          _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.cursorOverbutton = 1;\n        } else {\n          document.body.style.cursor = \"default\";\n          _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.cursorOverbutton = 0;\n        }\n      }\n    },\n    buttonClick() {\n      if (_Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.cursorOverbutton == 1 && _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.visible == 1) App.startNewGame();\n    },\n    touchButtonClick(x1, y1) {\n      elem = document.getElementById('canvasBody');\n      if (x1 > _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonX1 + elem.offsetLeft && x1 < _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonX2 + elem.offsetLeft && y1 > _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonY1 + elem.offsetTop && y1 < _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.buttonY2 + elem.offsetTop && _Field_js__WEBPACK_IMPORTED_MODULE_2__.Field.buttonTryAgain.visible == 1) App.startNewGame();\n    },\n    pressEnter() {\n      if (winStatus == 1 || loseStatus == 1) App.startNewGame();\n    },\n    openAdminPanel() {\n      document.getElementById('adminPanel').style = 'display: block';\n    },\n    triggerButton(button) {\n      switch (button) {\n        case 'startNewGame':\n          App.startNewGame();\n          break;\n        case 'makeLose':\n          App.gameStatus.makeLose();\n          break;\n        case 'makeWin':\n          App.gameStatus.makeWin();\n          break;\n        case 'makePrewinSituation':\n          App.adminComands.makePrewinSituation();\n          break;\n        case 'makePreloseSituation':\n          App.adminComands.makePreloseSituation();\n          break;\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://2048game/./src/modules/App.js?");

/***/ }),

/***/ "./src/modules/Cell.js":
/*!*****************************!*\
  !*** ./src/modules/Cell.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cell: () => (/* binding */ Cell)\n/* harmony export */ });\nclass Cell {\n  constructor(index) {\n    // В паре \"индекс - номер\" индекс служит для математических операций, а номер оставлен для простоты восприятия кода, в частности в паре \"номер - билет\", где в определённый момент хода, они могут иметь разные значения\n\n    this.random10Percent = Math.floor(Math.random() * 10);\n    this.value = 2;\n    if (this.random10Percent == 9) this.value = 4;\n    this._number = index + 1;\n    this.ticket = this._number;\n    this.toDelete = 0;\n    this.statusNewlyCreating = 1;\n    this.sizePenalty = 0;\n    this.statusEndedMerge = 0;\n    this.sizeBonus = 0;\n  }\n  set number(value) {\n    this._number = value;\n    this.index = this._number - 1;\n    this.columnNumber = (this.index + 1) % 4 != 0 ? (this.index + 1) % 4 : 4;\n    this.rowNumber = Math.floor(this.index / 4) + 1;\n    this.x = this.columnNumber * 90 - 80;\n    this.y = this.rowNumber * 90 - 80;\n    this.moveSpeed = 0;\n    this.mergeBlock = 0;\n    this.valueOfDraw = this.value;\n  }\n  get number() {\n    return this._number;\n  }\n  animateMerge(tick) {\n    if (this.statusEndedMerge == 0) return 0;\n    this.sizeBonus = 1 * tick;\n  }\n  animateCreating(tick) {\n    if (this.statusNewlyCreating == 0) return 0;\n    this.sizePenalty = 2 * tick;\n  }\n  stopAnimating() {\n    this.statusNewlyCreating = 0;\n    this.sizePenalty = 0;\n    this.statusEndedMerge = 0;\n    this.sizeBonus = 0;\n  }\n}\n\n//# sourceURL=webpack://2048game/./src/modules/Cell.js?");

/***/ }),

/***/ "./src/modules/Controller.js":
/*!***********************************!*\
  !*** ./src/modules/Controller.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controller: () => (/* binding */ Controller)\n/* harmony export */ });\nclass Controller {\n  static init() {\n    Controller.#setKeyboardController();\n    Controller.#setMouseController();\n    Controller.#setTouchpadController();\n    Controller.#setButtonsController();\n  }\n  static #setKeyboardController() {\n    let passArray = new Array();\n    document.addEventListener('keydown', function (event) {\n      switch (event.code) {\n        case 'ArrowUp':\n          Controller.doMove('up');\n          break;\n        case 'ArrowDown':\n          Controller.doMove('down');\n          break;\n        case 'ArrowLeft':\n          Controller.doMove('left');\n          break;\n        case 'ArrowRight':\n          Controller.doMove('right');\n          break;\n        case 'Enter':\n          event.preventDefault();\n          Controller.pressEnter();\n          break;\n      }\n      passArray.push(event.code);\n      if (passArray.length > 5) passArray.shift();\n      if (passArray.join() == ['KeyA', 'KeyD', 'KeyM', 'KeyI', 'KeyN'].join()) {\n        Controller.OpenAdminPanel();\n      }\n    });\n  }\n  static #setMouseController() {\n    document.addEventListener('mousedown', mouseButtonDown, event);\n    function mouseButtonDown(buttonDownEvent) {\n      if (event === null) return 0;\n      if (event.type == \"touchstart\") return 0;\n      let x1 = buttonDownEvent.x;\n      let y1 = buttonDownEvent.y;\n      document.addEventListener('mouseup', buttonUp, event);\n      function buttonUp(ButtonUpEvent) {\n        if (event === null) return 0;\n        if (event.type == \"touchstart\") return 0;\n        let x2 = ButtonUpEvent.x;\n        let y2 = ButtonUpEvent.y;\n        checkMove();\n        checkClick();\n        function checkMove() {\n          let axis;\n          let moveTo;\n          let mouseMove = [x2 - x1, y2 - y1];\n          if (Math.abs(mouseMove[0]) + Math.abs(mouseMove[1]) < 200) return 0;\n          if (Math.abs(mouseMove[0]) > Math.abs(mouseMove[1])) Controller.axis = 'x';else Controller.axis = 'y';\n          if (Controller.axis == 'y') {\n            if (mouseMove[1] > 0) moveTo = 'down';else moveTo = 'up';\n          }\n          if (Controller.axis == 'x') {\n            if (mouseMove[0] > 0) moveTo = 'right';else moveTo = 'left';\n          }\n          Controller.doMove(moveTo);\n        }\n        function checkClick() {\n          if (Math.abs(x2 - x1) + Math.abs(y2 - y1) < 5) {\n            Controller.buttonClick();\n          }\n        }\n      }\n    }\n    document.addEventListener('mousemove', Controller.checkMouseMove);\n  }\n  static #setTouchpadController() {\n    let deltaX;\n    let deltaY;\n    let touchStartEvent;\n    document.addEventListener(\"touchstart\", touchStart, event);\n    function touchStart(touchStartEvent) {\n      function touchMove(touchMoveEvent) {\n        if (touchStartEvent) {\n          deltaX = touchMoveEvent.touches[0].pageX - touchStartEvent.touches[0].pageX;\n          deltaY = touchMoveEvent.touches[0].pageY - touchStartEvent.touches[0].pageY;\n        }\n      }\n      document.addEventListener(\"touchmove\", touchMove, event);\n      document.addEventListener(\"touchend\", touchEnd);\n      function touchEnd() {\n        let axis;\n        if (isNaN(Math.abs(deltaX))) return 0;\n        if (Math.abs(deltaX) + Math.abs(deltaY) < 100) return 0;\n        if (Math.abs(deltaX) > Math.abs(deltaY)) Controller.axis = 'x';else Controller.axis = 'y';\n        if (Controller.axis == 'y') {\n          if (deltaY > 0) moveTo = 'down';else moveTo = 'up';\n        }\n        if (Controller.axis == 'x') {\n          if (deltaX > 0) moveTo = 'right';else moveTo = 'left';\n        }\n        Controller.doMove(moveTo);\n        touchStartEvent = null;\n      }\n    }\n    document.addEventListener('touchstart', touchClick);\n    function touchClick() {\n      elem = document.getElementById('canvasBody');\n      let x1 = event.touches[0]?.pageX;\n      let y1 = event.touches[0]?.pageY;\n      document.addEventListener('touchend', touchClickEnd, event, x1, y1);\n    }\n    function touchClickEnd(e, x1, y1) {\n      let x2 = e.x;\n      let y2 = e.y;\n      if (Math.abs(x1 - x2) + Math.abs(y1 - y2) < 5) {\n        Controller.touchButtonClick(x1, y1);\n      }\n    }\n  }\n  static #setButtonsController() {\n    document.getElementById('startNewGame').addEventListener('click', Controller.triggerButton, 'startNewGame');\n    document.getElementById('makeLose').addEventListener('click', Controller.triggerButton, 'makeLose');\n    document.getElementById('makeWin').addEventListener('click', Controller.triggerButton, 'makeWin');\n    document.getElementById('makePrewinSituation').addEventListener('click', Controller.triggerButton, 'makePrewinSituation');\n    document.getElementById('makePreloseSituation').addEventListener('click', Controller.triggerButton, 'makePreloseSituation');\n  }\n  static triggerButton;\n  static doMove;\n  static makeLose;\n  static makeWin;\n  static makePrewinSituation;\n  static makePreloseSituation;\n  static startNewGame;\n  static checkMouseMove;\n  static buttonClick;\n  static touchButtonClick;\n  static pressEnter;\n  static openAdminPanel;\n}\n\n//# sourceURL=webpack://2048game/./src/modules/Controller.js?");

/***/ }),

/***/ "./src/modules/Drawer.js":
/*!*******************************!*\
  !*** ./src/modules/Drawer.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Drawer: () => (/* binding */ Drawer)\n/* harmony export */ });\nclass Drawer {\n  static #size = 80;\n  static #minMargin = Drawer.#size / 8;\n  static #fullSize = 4 * Drawer.#size + 5 * Drawer.#minMargin;\n  static #stepMargin = Drawer.#minMargin + Drawer.#size;\n  static #textMarginSize = Drawer.#size / 8 * 3;\n  static drawScore(score) {\n    let canvas = document.getElementById('canvasHead').getContext('2d');\n    canvas.clearRect(0, 0, canvasHead.width, canvasHead.height);\n    canvas.font = 'bold ' + Drawer.#size * 35 / 80 + 'px sans-serif';\n    let [textWidth, textHeight] = Drawer.#mathWidthHeight('SCORE:' + score, canvas);\n    canvas.fillStyle = '#bbada0';\n    let textWithMarginsWidth = textWidth + Drawer.#textMarginSize;\n    let textScoreMargin = Drawer.#size * 25 / 80;\n    let buttonScoreMarginTop = Drawer.#size / 4;\n    let textScoreMarginTop = Drawer.#size / 8;\n    Drawer.#roundRect(canvas, (Drawer.#fullSize - textWithMarginsWidth) / 2 - textScoreMargin, buttonScoreMarginTop, textWidth + (Drawer.#fullSize - textWithMarginsWidth) / 2 + textScoreMargin, buttonScoreMarginTop + textHeight + 2 * textScoreMarginTop, 20);\n    canvas.strokeStyle = '#776e65';\n    Drawer.#roundRectStroke(canvas, (Drawer.#fullSize - textWithMarginsWidth) / 2 - textScoreMargin, buttonScoreMarginTop, textWidth + (Drawer.#fullSize - textWithMarginsWidth) / 2 + textScoreMargin, buttonScoreMarginTop + textHeight + 2 * textScoreMarginTop, 20, 5);\n    canvas.fillStyle = \"#ebe4da\";\n    canvas.fillText(\"SCORE: \" + score, (Drawer.#fullSize - textWithMarginsWidth) / 2, buttonScoreMarginTop + textHeight + textScoreMarginTop);\n  }\n  static runBodyDrawer(drawDuration, cellArray) {\n    let timerDrawCells = setInterval(() => {\n      Drawer.drawCells(cellArray);\n    }, 10);\n    setTimeout(() => {\n      clearInterval(timerDrawCells);\n    }, drawDuration);\n  }\n  static drawCells(cellArray) {\n    let canvas = document.getElementById('canvasBody').getContext('2d');\n    canvas.clearRect(0, 0, canvasBody.width, canvasBody.height);\n    Drawer.#drawBackground();\n    cellArray.forEach(function (item) {\n      let cellValue = item.valueOfDraw;\n      switch (cellValue) {\n        case 2:\n        case 4:\n        case 8:\n        case 16:\n        case 32:\n        case 64:\n          canvas.font = 'bold 50px sans-serif';\n          break;\n        case 128:\n        case 256:\n        case 512:\n          canvas.font = 'bold 42px sans-serif';\n          break;\n        case 1024:\n        case 2048:\n          canvas.font = 'bold 35px sans-serif';\n          break;\n      }\n      switch (cellValue) {\n        case 2:\n          canvas.fillStyle = '#eee4da';\n          break;\n        case 4:\n          canvas.fillStyle = '#ede0c8';\n          break;\n        case 8:\n          canvas.fillStyle = '#f2b179';\n          break;\n        case 16:\n          canvas.fillStyle = '#f59563';\n          break;\n        case 32:\n          canvas.fillStyle = '#f67c5f';\n          break;\n        case 64:\n          canvas.fillStyle = '#f35c3d';\n          break;\n        case 128:\n          canvas.fillStyle = '#e7cf73';\n          break;\n        case 256:\n          canvas.fillStyle = '#ecca64';\n          break;\n        case 512:\n        case 1024:\n          canvas.fillStyle = '#eac75c';\n          break;\n        case 2048:\n          canvas.fillStyle = '#e6bd4f';\n          break;\n        default:\n          canvas.fillStyle = '#f2b179';\n          break;\n      }\n      Drawer.#roundRect(canvas, item.x + item.sizePenalty - item.sizeBonus, item.y + item.sizePenalty - item.sizeBonus, item.x + Drawer.#size - item.sizePenalty + item.sizeBonus, item.y + Drawer.#size - item.sizePenalty + item.sizeBonus, 3);\n      switch (cellValue) {\n        case 2:\n        case 4:\n          canvas.fillStyle = '#776e65';\n          break;\n        case 8:\n        case 16:\n        case 32:\n        case 64:\n        case 128:\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n          canvas.fillStyle = '#f9f6f2';\n          break;\n        default:\n          canvas.fillStyle = '#776e65';\n          break;\n      }\n      let [textWidth, textHeight] = Drawer.#mathWidthHeight(cellValue, canvas);\n      let addWidth = (Drawer.#size - textWidth) / 2;\n      let addHeight = (Drawer.#size - textHeight) / 2;\n      canvas.fillText(cellValue, item.x + addWidth, item.y + addHeight + textHeight);\n    });\n  }\n  static drawLose() {\n    let canvas = document.getElementById('canvasBody').getContext('2d');\n    canvas.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n    Drawer.#roundRect(canvas, 0, 0, Drawer.#fullSize, Drawer.#fullSize, 10);\n    canvas.fillStyle = \"#776e65\";\n    canvas.font = 'bold 50px sans-serif';\n    let [textWidth, textHeight] = Drawer.#mathWidthHeight('GAME OVER!', canvas);\n    addWidth = (Drawer.#fullSize - textWidth) / 2;\n    addHeight = (Drawer.#fullSize - textHeight) / 2;\n    canvas.fillText(\"GAME OVER!\", addWidth, addHeight + textHeight);\n  }\n  static drawWin() {\n    let canvas = document.getElementById('canvasBody').getContext('2d');\n    canvas.fillStyle = \"rgba(255, 215, 0, 0.5)\";\n    Drawer.#roundRect(canvas, 0, 0, Drawer.#fullSize, Drawer.#fullSize, 10);\n    canvas.fillStyle = \"#f9f6f2\";\n    canvas.font = 'bold 50px sans-serif';\n    let [textWidth, textHeight] = Drawer.#mathWidthHeight('YOU WIN!', canvas);\n    let addWidth = (Drawer.#fullSize - textWidth) / 2;\n    let addHeight = (Drawer.#fullSize - textHeight) / 2;\n    canvas.fillText(\"YOU WIN!\", addWidth, addHeight + textHeight);\n  }\n  static #drawBackground() {\n    let canvas = document.getElementById('canvasBody').getContext('2d');\n    canvas.fillStyle = '#776e65';\n    Drawer.#roundRect(canvas, 0, 0, Drawer.#fullSize, Drawer.#fullSize, 10);\n    canvas.fillStyle = '#bbada0';\n    for (let y = 0; y < 4; y++) {\n      for (let x = 0; x < 4; x++) {\n        let startWidth = Drawer.#minMargin + Drawer.#stepMargin * x;\n        let startHeight = Drawer.#minMargin + Drawer.#stepMargin * y;\n        Drawer.#roundRect(canvas, startWidth, startHeight, startWidth + Drawer.#size, startHeight + Drawer.#size, 3);\n      }\n    }\n  }\n  static drawButton(button) {\n    let canvas = document.getElementById('canvasBody').getContext('2d');\n    canvas.fillStyle = \"#8f7a66\";\n    canvas.font = 'bold ' + Drawer.#size / 4 + 'px sans-serif';\n    let [textWidth, textHeight] = Drawer.#mathWidthHeight(\"Try again\", canvas);\n    let textWithMarginsWidth = textWidth + Drawer.#textMarginSize;\n    Drawer.#roundRect(canvas, (Drawer.#fullSize - textWithMarginsWidth) / 2, 220, textWidth + 30 + (Drawer.#fullSize - textWithMarginsWidth) / 2, textHeight + 15 + 220, 3);\n    canvas.fillStyle = \"#f9f6f2\";\n    canvas.fillText(\"Try again\", (Drawer.#fullSize - textWidth - 10) / 2 + 2, 244);\n    return [(Drawer.#fullSize - textWithMarginsWidth) / 2, 220, textWidth + 30 + (Drawer.#fullSize - textWithMarginsWidth) / 2, textHeight + 15 + 220];\n  }\n  static #roundRect(canvas, x1, y1, x2, y2, radius) {\n    radius = Math.min(radius, (x2 - x1) / 2, (y2 - y1) / 2);\n    canvas.beginPath();\n    canvas.moveTo(x1 + radius, y1);\n    canvas.lineTo(x2 - radius, y1);\n    canvas.arcTo(x2, y1, x2, y1 + radius, radius);\n    canvas.lineTo(x2, y2 - radius);\n    canvas.arcTo(x2, y2, x2 - radius, y2, radius);\n    canvas.lineTo(x1 + radius, y2);\n    canvas.arcTo(x1, y2, x1, y2 - radius, radius);\n    canvas.lineTo(x1, y1 + radius);\n    canvas.arcTo(x1, y1, x1 + radius, y1, radius);\n    canvas.fill();\n  }\n  static #roundRectStroke(canvas, x1, y1, x2, y2, radius, lineWidth) {\n    canvas.lineWidth = lineWidth;\n    radius = Math.min(radius, (x2 - x1) / 2, (y2 - y1) / 2);\n    canvas.beginPath();\n    canvas.moveTo(x1 + radius, y1);\n    canvas.lineTo(x2 - radius, y1);\n    canvas.arcTo(x2, y1, x2, y1 + radius, radius);\n    canvas.lineTo(x2, y2 - radius);\n    canvas.arcTo(x2, y2, x2 - radius, y2, radius);\n    canvas.lineTo(x1 + radius, y2);\n    canvas.arcTo(x1, y2, x1, y2 - radius, radius);\n    canvas.lineTo(x1, y1 + radius);\n    canvas.arcTo(x1, y1, x1 + radius, y1, radius);\n    canvas.stroke();\n  }\n  static #mathWidthHeight(text, canvas) {\n    let metrics = canvas.measureText(text);\n    let actualHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    return [metrics.width, actualHeight];\n  }\n}\n\n//# sourceURL=webpack://2048game/./src/modules/Drawer.js?");

/***/ }),

/***/ "./src/modules/Field.js":
/*!******************************!*\
  !*** ./src/modules/Field.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Field: () => (/* binding */ Field)\n/* harmony export */ });\n/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cell.js */ \"./src/modules/Cell.js\");\n\nconst cell = new _Cell_js__WEBPACK_IMPORTED_MODULE_0__.Cell();\nclass Field {\n  static buttonTryAgain = {\n    cursorOverbutton: 0,\n    set buttonXY(value) {\n      [this.buttonX1, this.buttonY1, this.buttonX2, this.buttonY2] = value;\n    }\n  };\n  static moveDeltaXY = {\n    down: [0, 90],\n    up: [0, -90],\n    left: [-90, 0],\n    right: [90, 0]\n  };\n  static score = 0;\n  static cellArray = [];\n  static moveDirection;\n  static phaseTime = 100;\n  static winStatus = 0;\n  static loseStatus = 0;\n  static moveDetected = 0;\n  static columnArray = {\n    down: [[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]],\n    up: [[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]],\n    left: [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]],\n    right: [[4, 3, 2, 1], [8, 7, 6, 5], [12, 11, 10, 9], [16, 15, 14, 13]]\n  };\n  static turnBlock = 0;\n  static getCellFromNumber(cellNumber) {\n    return Field.cellArray.find(function (item, index) {\n      return item.ticket == cellNumber;\n    });\n  }\n  static createCell(number) {\n    let newCell = new _Cell_js__WEBPACK_IMPORTED_MODULE_0__.Cell(number);\n    Field.cellArray.push(newCell);\n  }\n  static resetData() {\n    Field.winStatus = 0;\n    Field.loseStatus = 0;\n    Field.score = 0;\n    Field.buttonTryAgain.visible = 0;\n    Field.buttonTryAgain.cursorOverbutton = 0;\n    document.body.style.cursor = \"default\";\n    Field.cellArray = [];\n    Field.turnBlock = 0;\n  }\n  static make2ActiveCells() {\n    let randomNum1 = Math.floor(Math.random() * 16);\n    let randomNum2;\n    do {\n      randomNum2 = Math.floor(Math.random() * 16);\n    } while (randomNum2 === randomNum1);\n    let newCell = Field.createCell(randomNum1);\n    Field.cellArray.push(newCell);\n    newCell = Field.createCell(randomNum2);\n    Field.cellArray.forEach(function (item) {\n      item.value = 2;\n      item.valueOfDraw = 2;\n    });\n  }\n  static make1ActiveCell() {\n    let randomNum;\n    function checkCellFunc() {\n      let thisCell = Field.cellArray.find(function (item) {\n        return item.ticket == randomNum + 1;\n      });\n      return thisCell;\n    }\n    do {\n      randomNum = Math.floor(Math.random() * 16);\n    } while (checkCellFunc());\n    Field.createCell(randomNum);\n  }\n  static deleteExcessCells() {\n    Field.cellArray = Field.cellArray.filter(function (item) {\n      return item.toDelete != 1;\n    });\n  }\n}\n\n//# sourceURL=webpack://2048game/./src/modules/Field.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;